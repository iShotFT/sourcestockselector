name: Build and Deploy

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
    
    - name: Setup RimWorld References
      run: |
        # Create directory for RimWorld references
        mkdir -p References
        
        # Download RimWorld assemblies from repository release
        curl -L -o References/Assembly-CSharp.dll https://github.com/${{ github.repository }}/releases/download/references/Assembly-CSharp.dll
        curl -L -o References/UnityEngine.dll https://github.com/${{ github.repository }}/releases/download/references/UnityEngine.dll
        curl -L -o References/UnityEngine.CoreModule.dll https://github.com/${{ github.repository }}/releases/download/references/UnityEngine.CoreModule.dll
        curl -L -o References/UnityEngine.IMGUIModule.dll https://github.com/${{ github.repository }}/releases/download/references/UnityEngine.IMGUIModule.dll
        curl -L -o References/UnityEngine.TextRenderingModule.dll https://github.com/${{ github.repository }}/releases/download/references/UnityEngine.TextRenderingModule.dll

    - name: Build
      run: |
        dotnet build Source/StockpileSelector/StockpileSelector.csproj -c Release
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: StockpileSelector
        path: Assemblies/StockpileSelector.dll

  deploy:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment:
      name: steam-workshop
      url: https://steamcommunity.com/sharedfiles/filedetails/?id=${{ secrets.STEAM_WORKSHOP_ID }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Request Steam Guard Code
      uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.token }}
        approvers: ${{ github.actor }}
        minimum-approvals: 1
        message: 'Please enter your Steam Guard code'
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: StockpileSelector
        path: Assemblies

    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: Assemblies/StockpileSelector.dll
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload to Steam Workshop
      if: success()
      env:
        STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
        STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
        STEAM_WORKSHOP_ID: ${{ secrets.STEAM_WORKSHOP_ID }}
      run: |
        # Install SteamCMD
        sudo apt-get install -y lib32gcc1
        mkdir -p ~/.steam/steam
        
        # Download and setup SteamCMD
        wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
        tar -xvzf steamcmd_linux.tar.gz
        
        # First login to cache credentials
        echo "Waiting for Steam Guard code input..."
        read -p "Enter Steam Guard code: " STEAM_GUARD_CODE
        ./steamcmd.sh +login "$STEAM_USERNAME" "$STEAM_PASSWORD" "$STEAM_GUARD_CODE" +quit 