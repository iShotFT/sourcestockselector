name: Build and Deploy

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    
    - name: Setup RimWorld References
      run: |
        # Create directory for RimWorld references
        mkdir -p References
        
        # Download RimWorld assemblies from your private storage or use Steam CMD
        # For now, we'll need to manually upload these to a release or storage
        # TODO: Add secure download of RimWorld assemblies

    - name: Build
      run: |
        dotnet build Source/StockpileSelector/StockpileSelector.csproj -c Release
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: StockpileSelector
        path: Assemblies/StockpileSelector.dll

  deploy:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: StockpileSelector
        path: Assemblies

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload to Steam Workshop
      if: success()
      env:
        STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
        STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
        STEAM_GUARD_FILE: ${{ secrets.STEAM_GUARD_FILE }}
        STEAM_WORKSHOP_ID: ${{ secrets.STEAM_WORKSHOP_ID }}
      run: |
        # Install SteamCMD
        sudo apt-get install -y lib32gcc1
        mkdir -p ~/.steam/steam/config
        echo "$STEAM_GUARD_FILE" > ~/.steam/steam/config/guard.txt
        
        # Download and setup SteamCMD
        wget https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz
        tar -xvzf steamcmd_linux.tar.gz
        
        # First login to cache credentials
        ./steamcmd.sh +login "$STEAM_USERNAME" "$STEAM_PASSWORD" +quit
        
        # Upload to workshop
        ./steamcmd.sh +workshop_build_item "$STEAM_WORKSHOP_ID" "$GITHUB_WORKSPACE" +quit 